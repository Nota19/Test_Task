package ru.hmel.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the Electronics service. Represents a row in the &quot;store_Electronics&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link ru.hmel.model.impl.ElectronicsModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ru.hmel.model.impl.ElectronicsImpl}.
 * </p>
 *
 * @author Hmel Max
 * @see Electronics
 * @see ru.hmel.model.impl.ElectronicsImpl
 * @see ru.hmel.model.impl.ElectronicsModelImpl
 * @generated
 */
public interface ElectronicsModel extends BaseModel<Electronics> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a electronics model instance should use the {@link Electronics} interface instead.
     */

    /**
     * Returns the primary key of this electronics.
     *
     * @return the primary key of this electronics
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this electronics.
     *
     * @param primaryKey the primary key of this electronics
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the electronics_id of this electronics.
     *
     * @return the electronics_id of this electronics
     */
    public long getElectronics_id();

    /**
     * Sets the electronics_id of this electronics.
     *
     * @param electronics_id the electronics_id of this electronics
     */
    public void setElectronics_id(long electronics_id);

    /**
     * Returns the name of this electronics.
     *
     * @return the name of this electronics
     */
    @AutoEscape
    public String getName();

    /**
     * Sets the name of this electronics.
     *
     * @param name the name of this electronics
     */
    public void setName(String name);

    /**
     * Returns the etype of this electronics.
     *
     * @return the etype of this electronics
     */
    public long getEtype();

    /**
     * Sets the etype of this electronics.
     *
     * @param etype the etype of this electronics
     */
    public void setEtype(long etype);

    /**
     * Returns the price of this electronics.
     *
     * @return the price of this electronics
     */
    public long getPrice();

    /**
     * Sets the price of this electronics.
     *
     * @param price the price of this electronics
     */
    public void setPrice(long price);

    /**
     * Returns the count of this electronics.
     *
     * @return the count of this electronics
     */
    public long getCount();

    /**
     * Sets the count of this electronics.
     *
     * @param count the count of this electronics
     */
    public void setCount(long count);

    /**
     * Returns the in stock of this electronics.
     *
     * @return the in stock of this electronics
     */
    public boolean getInStock();

    /**
     * Returns <code>true</code> if this electronics is in stock.
     *
     * @return <code>true</code> if this electronics is in stock; <code>false</code> otherwise
     */
    public boolean isInStock();

    /**
     * Sets whether this electronics is in stock.
     *
     * @param inStock the in stock of this electronics
     */
    public void setInStock(boolean inStock);

    /**
     * Returns the archive of this electronics.
     *
     * @return the archive of this electronics
     */
    public boolean getArchive();

    /**
     * Returns <code>true</code> if this electronics is archive.
     *
     * @return <code>true</code> if this electronics is archive; <code>false</code> otherwise
     */
    public boolean isArchive();

    /**
     * Sets whether this electronics is archive.
     *
     * @param archive the archive of this electronics
     */
    public void setArchive(boolean archive);

    /**
     * Returns the description of this electronics.
     *
     * @return the description of this electronics
     */
    @AutoEscape
    public String getDescription();

    /**
     * Sets the description of this electronics.
     *
     * @param description the description of this electronics
     */
    public void setDescription(String description);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(ru.hmel.model.Electronics electronics);

    @Override
    public int hashCode();

    @Override
    public CacheModel<ru.hmel.model.Electronics> toCacheModel();

    @Override
    public ru.hmel.model.Electronics toEscapedModel();

    @Override
    public ru.hmel.model.Electronics toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
